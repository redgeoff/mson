{
  "name": "mson",
  "version": "1.4.0",
  "description": "MSON Lang: Generate an app from JSON",
  "author": "Geoff Cox",
  "license": "Apache-2.0",
  "dependencies": {
    "@babel/runtime": "^7.10.2",
    "country-telephone-data": "^0.6.2",
    "date-fns": "^2.14.0",
    "events": "^3.1.0",
    "lodash": "^4.17.15",
    "sift": "^9.0.0",
    "text-mask-addons": "^3.8.0",
    "uuid": "^8.1.0",
    "vanilla-text-mask": "^5.1.1"
  },
  "devDependencies": {
    "@babel/cli": "^7.10.1",
    "@babel/core": "^7.10.2",
    "@babel/plugin-proposal-class-properties": "^7.10.1",
    "@babel/plugin-transform-runtime": "^7.10.1",
    "@babel/preset-env": "^7.10.2",
    "babel-loader": "^8.1.0",
    "copyfiles": "^2.3.0",
    "cross-env": "^7.0.2",
    "husky": "^4.2.5",
    "lint-staged": "^10.2.7",
    "prettier": "^2.0.5",
    "react-scripts": "^3.4.1",
    "webpack-bundle-analyzer": "^3.8.0",
    "webpack-cli": "^3.3.11"
  },
  "lint-staged": {
    "src/**/*.{js,jsx,json,css}": [
      "prettier --single-quote --write",
      "git add"
    ]
  },
  "scripts": {
    "lint": "eslint src",
    "test-server-start": "cross-env NODE_ENV=production ./node_modules/@babel/node/bin/babel-node.js ../mson-server/bin/test-server.js --port=4002 --prefix=mson_test_ --CORE_TEST &",
    "test-server-stop": "pkill -f --signal=SIGINT CORE_TEST & exit 0",
    "just-test": "react-scripts test --env=jsdom --maxWorkers=3 --testPathPattern='^((?!performance).)*test.js$'",
    "test:performance": "react-scripts test --env=jsdom --maxWorkers=1 --testPathPattern='performance.test.js$'",
    "test:coverage": "npm run just-test -- --coverage",
    "test": "npm run lint && CI=true npm run test:coverage && CI=true npm run test:performance",
    "copy-json": "copyfiles -u 1 src/**/*.json lib",
    "compile": "cross-env NODE_ENV=production babel src --ignore '**/*.test.js' -d lib && npm run copy-json",
    "bundle": "webpack",
    "touch": "find src -exec touch {} \\;",
    "analyze-bundle": "webpack --profile --json > ./dist/stats.json && webpack-bundle-analyzer ./dist/stats.json"
  },
  "jest": {
    "collectCoverageFrom": [
      "src/**/*.{js,jsx}"
    ],
    "coverageThreshold": {
      "global": {
        "branches": 100,
        "functions": 100,
        "lines": 100,
        "statements": 100
      }
    }
  },
  "husky": {
    "hooks": {
      "pre-commit": "lint-staged"
    }
  },
  "browserslist": [
    ">0.2%",
    "not dead",
    "not ie <= 11",
    "not op_mini all"
  ]
}
